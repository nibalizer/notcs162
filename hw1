hw 1
spencer krum
may 1 2010

Algorithm for being successful at cs162:

   1) check d2l once per week
   2) post to d2l discussions once per week
   3) Do hw
   4) Do programs
   5) check hw against requirements page
   6) turn in via d2l

Style

I Think about consistent tabbing and indentation. It is helpful to have 
a standard form of naming variables and functions. I also like comments
that are succinct and helpful. 

Ethics

It is important to explain what is happening to the user. If the program
calculates a number for the user it is imperative that the program explain
what kind of uncertainty exists in the value, both from floating point
error and numerical approximations in the algorithm. It is especially 
important to enumerate what, if any, assumptions were made behind the math/physics.


C++

1.      Create three different valid variables to hold your age, first name, and hourly wage.
        int age;
        char * name;
        float wage;

2.      Show an example of an invalid identifier
        .bad

3.      Show the difference between the + and the += operators. Explain why you would use the += instead of the +
        p += 7 //increases p by 7
        t = p + 7 // assigns t to the value p + 7, leaves p well alone

4.      What is the different between the prefix and postfix ++ operator. Show an example of when it would be best to use each of them.
        prefix is evaluated before, postfix is evaluated after
        it is best to use postfix in a for loop
        it is best to use prefix when overcoming offbyone errors or zero index errors

5.      Create a variable just large enough to hold your full name
        char specnerkrum[11];

6.      Show how to read in your full name into this variable
        cin.get(spencerkrum, 11, '\n')

7.      Show how to capitalize just the first letter of both your first and last name
        for(int i = 0; i < len(s); i++){
            if (s[i-1] == ' '){
                s[i] = toUpper(s[i]);
            }
        }

8.      Now, use strcmp and strlen in an example
        char * p;
        char * s;
        if (strcmp(s,p)){
            if (strlen(s) != strclen(p)){
                cout << "Whaaaaat" << endl;
            }
        }

9.      Write a prototype for a function that will return nothing and supply a char (by reference) and an integer (by value) as arguments
        void lasers(char& foo; int number);

10.  Write a function that reads in someoneâ€™s name, age and salary and supply this information back to the calling routine through the argument list (hint: pass by reference)
        void lasers(char name[]; char salary[]; int& age){
            cout << "Enter Name: " << endl;
            cin.get(name, 80, '\n');
            cout << "Enter salary: " << endl;
            cin.get(salary, 80, '\n');
            cout << "Enter age: " << endl;
            cin >> age;
        }
